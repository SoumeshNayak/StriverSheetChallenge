class Solution:
    def findMedianSortedArrays(self, A: List[int], B: List[int]) -> float:

        totalele=len(A)+len(B)
        half=totalele//2
        if len(A)>len(B):
            A,B=B,A
        
        l,r=0,len(A)-1
        while True:
            i=(l+r)//2
            j=half-i-2

            Aleft=A[i] if i>=0 else float("-infinity")
            Aright=A[i+1] if i+1< len(A) else float("infinity")
            Bleft=B[j] if j>=0 else float("-infinity")
            Bright=B[j+1] if j+1<len(B) else float("infinity")

            if Aleft<=Bright and Bleft<=Aright:
                #if odd
                if totalele%2:
                    return min(Aright,Bright)
                else:
                    return (max(Aleft,Bleft)+min(Aright,Bright))/2
            elif Aleft>Bright:
                r=i-1
            else:
                l=i+1


